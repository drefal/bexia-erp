name: Bexia ERP â€“ Deploy

on:
  push:
    branches:
      - grupol7/develop
      - grupol7/main
  workflow_dispatch:

concurrency:
  group: bexia-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy_test:
    name: Deploy TEST (grupol7/develop)
    if: github.ref == 'refs/heads/grupol7/develop'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Load SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DO_KEY }}

      - name: Trust host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DO_HOST }} >> ~/.ssh/known_hosts

      - name: Ensure remote directory exists
        run: ssh ${{ secrets.DO_USER }}@${{ secrets.DO_HOST }} "mkdir -p '${{ secrets.DO_PATH_TEST }}'"

      - name: Sync files to TEST (rsync)
        run: |
          rsync -avz --delete \
            --exclude='.git' \
            --exclude='vendor' \
            --exclude='node_modules' \
            ./ ${{ secrets.DO_USER }}@${{ secrets.DO_HOST }}:${{ secrets.DO_PATH_TEST }}/

      - name: Build & deploy on server (TEST)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_KEY }}
          script: |
            set -e
            cd "${{ secrets.DO_PATH_TEST }}"
            docker compose pull || true
            docker compose build --no-cache app || true
            docker compose up -d
            # Dependencias y optimizaciones
            docker compose exec -T app composer install --no-interaction --prefer-dist --optimize-autoloader
            docker compose exec -T app php artisan key:generate --force || true
            docker compose exec -T app php artisan migrate --force
            docker compose exec -T app php artisan config:cache
            docker compose exec -T app php artisan route:cache
            docker compose exec -T app php artisan view:cache

  deploy_prod:
    name: Deploy PROD (grupol7/main)
    if: github.ref == 'refs/heads/grupol7/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Load SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DO_KEY }}

      - name: Trust host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DO_HOST }} >> ~/.ssh/known_hosts

      - name: Ensure remote directory exists
        run: ssh ${{ secrets.DO_USER }}@${{ secrets.DO_HOST }} "mkdir -p '${{ secrets.DO_PATH_PROD }}'"

      - name: Sync files to PROD (rsync)
        run: |
          rsync -avz --delete \
            --exclude='.git' \
            --exclude='vendor' \
            --exclude='node_modules' \
            ./ ${{ secrets.DO_USER }}@${{ secrets.DO_HOST }}:${{ secrets.DO_PATH_PROD }}/

      - name: Build & deploy on server (PROD)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_KEY }}
          script: |
            set -e
            cd "${{ secrets.DO_PATH_PROD }}"
            docker compose pull || true
            docker compose build --no-cache app || true
            docker compose up -d
            # Dependencias y optimizaciones
            docker compose exec -T app composer install --no-interaction --prefer-dist --optimize-autoloader
            docker compose exec -T app php artisan key:generate --force || true
            docker compose exec -T app php artisan migrate --force
            docker compose exec -T app php artisan config:cache
            docker compose exec -T app php artisan route:cache
            docker compose exec -T app php artisan view:cache
