name: Bexia ERP – Deploy

on:
  push:
    branches:
      - grupol7/develop
      - grupol7/main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Mantén la clave privada como SECRET (DO_KEY) en GitHub
      - name: Start ssh-agent & add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: -----BEGIN OPENSSH PRIVATE KEY-----
b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW
QyNTUxOQAAACASmIaRVMEqa4L5sclyxYwLizcqKUnKm2XBFCDtBHEA7gAAAJAzJjluMyY5
bgAAAAtzc2gtZWQyNTUxOQAAACASmIaRVMEqa4L5sclyxYwLizcqKUnKm2XBFCDtBHEA7g
AAAEDAxzRtx5Sub9A/l0K72BoV6MbOp1AzLC8mHk5eaL06BBKYhpFUwSprgvmxyXLFjAuL
NyopScqbZcEUIO0EcQDuAAAABmdsNy1jaQECAwQFBgc=
-----END OPENSSH PRIVATE KEY-----


      # Fijamos HOST/USER/RUTAS sin variables
      - name: Set deploy target (TEST/PROD)
        id: target
        shell: bash
        run: |
          echo "host=134.199.219.36" >> $GITHUB_OUTPUT
          echo "user=root" >> $GITHUB_OUTPUT
          if [[ "${GITHUB_REF##*/}" == "grupol7/main" ]]; then
            echo "path=/opt/bexia/prod/grupol7" >> $GITHUB_OUTPUT
            echo "env=prod" >> $GITHUB_OUTPUT
          else
            echo "path=/opt/bexia/test/grupol7" >> $GITHUB_OUTPUT
            echo "env=test" >> $GITHUB_OUTPUT
          fi

      # Crear ruta remota y mostrar info básica
      - name: Preflight (create dir, perms, space)
        run: |
          ssh -o StrictHostKeyChecking=no \
            ${{ steps.target.outputs.user }}@${{ steps.target.outputs.host }} "set -e
              P='${{ steps.target.outputs.path }}'
              mkdir -p \"\$P\"
              stat -c '%U:%G %A %n' \"\$P\" || true
              df -h \"\$P\" | tail -1
            "

      # Sincroniza código (excluye cosas pesadas)
      - name: Sync files with rsync
        run: |
          rsync -az --delete -e "ssh -o StrictHostKeyChecking=no" \
            --exclude ".git" \
            --exclude ".github" \
            --exclude "node_modules" \
            --exclude "vendor" \
            ./ \
            ${{ steps.target.outputs.user }}@${{ steps.target.outputs.host }}:${{ steps.target.outputs.path }}/

      # Levanta con Docker Compose en el servidor
      - name: Build & up with Docker Compose on server
        run: |
          ssh -o StrictHostKeyChecking=no \
            ${{ steps.target.outputs.user }}@${{ steps.target.outputs.host }} "set -e
              cd ${{ steps.target.outputs.path }}
              docker compose pull || true
              docker compose build --pull || true
              docker compose up -d
              docker compose ps
            "
